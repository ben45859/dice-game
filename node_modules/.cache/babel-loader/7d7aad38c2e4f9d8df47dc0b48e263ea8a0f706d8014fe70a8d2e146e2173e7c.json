{"ast":null,"code":"var _jsxFileName = \"/Users/benishakov/dice-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dice from './Dice';\nimport Player from './Player';\nimport GameOptions from './GameOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [player1, setPlayer1] = useState({\n    name: 'Player 1',\n    score: 0,\n    currentScore: 0,\n    isActive: true\n  });\n  const [player2, setPlayer2] = useState({\n    name: 'Player 2',\n    score: 0,\n    currentScore: 0,\n    isActive: false\n  });\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n  const [dice1, setDice1] = useState(0); // initial dice value\n  const [dice2, setDice2] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false); // game over state\n  const [winningScore, setWinningScore] = useState(100); // winning score\n\n  //const activePlayer = currentPlayer === 1 ? player1 : player2;\n  //const setActivePlayer = currentPlayer === 1 ? setPlayer1 : setPlayer2;\n\n  const checkWinningCondition = (player, score) => {\n    if (score >= winningScore) {\n      setIsGameOver(true);\n      alert(`${player.name} wins the game!`);\n      return true;\n    }\n    return false;\n  };\n  const rollDice = () => {\n    if (isGameOver) return;\n    const newDice1 = Math.floor(Math.random() * 6) + 1;\n    const newDice2 = Math.floor(Math.random() * 6) + 1;\n    setDice1(newDice1);\n    setDice2(newDice2);\n    if (newDice1 === 6 && newDice2 === 6) {\n      if (currentPlayer === 1) {\n        setPlayer1(prev => ({\n          ...prev,\n          currentScore: 0,\n          isActive: false\n        }));\n        setPlayer2(prev => ({\n          ...prev,\n          isActive: true\n        }));\n      } else {\n        setPlayer2(prev => ({\n          ...prev,\n          currentScore: 0,\n          isActive: false\n        }));\n        setPlayer1(prev => ({\n          ...prev,\n          isActive: true\n        }));\n      }\n      setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n    } else {\n      const newScore = newDice1 + newDice2;\n      if (currentPlayer === 1) {\n        const updatedScore = player1.currentScore + newScore;\n        if (checkWinningCondition(player1, player1.score + updatedScore)) {\n          setPlayer1(prev => ({\n            ...prev,\n            score: prev.score + updatedScore,\n            currentScore: updatedScore,\n            isActive: false\n          }));\n        } else {\n          setPlayer1(prev => ({\n            ...prev,\n            score: prev.score + updatedScore,\n            currentScore: updatedScore\n          }));\n        }\n      } else {\n        const updatedScore = player2.currentScore + newScore;\n        if (checkWinningCondition(player2, player2.score + updatedScore)) {\n          setPlayer2(prev => ({\n            ...prev,\n            score: prev.score + updatedScore,\n            currentScore: updatedScore,\n            isActive: false\n          }));\n        } else {\n          setPlayer2(prev => ({\n            ...prev,\n            currentScore: updatedScore\n          }));\n        }\n      }\n    }\n  };\n  const holdScore = () => {\n    if (isGameOver) return;\n    if (currentPlayer === 1) {\n      const nextScore = player1.score + player1.currentScore;\n      if (nextScore >= winningScore) {\n        setPlayer1(prev => ({\n          ...prev,\n          score: nextScore,\n          isActive: false\n        }));\n        setIsGameOver(true);\n        alert(`Player ${player1.name} wins the game!`);\n      } else {\n        setPlayer1(prev => ({\n          ...prev,\n          score: nextScore,\n          currentScore: 0,\n          isActive: false\n        }));\n        setPlayer2(prev => ({\n          ...prev,\n          isActive: true\n        }));\n        setCurrentPlayer(2);\n      }\n    } else {\n      const nextScore = player2.score + player2.currentScore;\n      if (nextScore >= winningScore) {\n        setPlayer2(prev => ({\n          ...prev,\n          score: nextScore,\n          isActive: false\n        }));\n        setIsGameOver(true);\n        alert(`${player2.name} wins the game!`);\n      } else {\n        setPlayer2(prev => ({\n          ...prev,\n          score: nextScore,\n          currentScore: 0,\n          isActive: false\n        }));\n        setPlayer1(prev => ({\n          ...prev,\n          isActive: true\n        }));\n        setCurrentPlayer(1);\n      }\n    }\n  };\n  const resetGame = () => {\n    setPlayer1({\n      name: 'Player 1',\n      score: 0,\n      currentScore: 0,\n      isActive: true\n    });\n    setPlayer2({\n      name: 'Player 2',\n      score: 0,\n      currentScore: 0,\n      isActive: false\n    });\n    setCurrentPlayer(player1);\n    setDice1(0);\n    setDice2(0);\n    setIsGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dice Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players\",\n      children: [/*#__PURE__*/_jsxDEV(Player, {\n        playerNumber: 1,\n        name: player1.name,\n        score: player1.score,\n        currentScore: player1.currentScore,\n        isActive: player1.isActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        playerNumber: 2,\n        name: player2.name,\n        score: player2.score,\n        currentScore: player2.currentScore,\n        isActive: player2.isActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dice, {\n      num1: dice1,\n      num2: dice2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameOptions, {\n      onRoll: rollDice,\n      onHold: holdScore,\n      isGameOver: isGameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-score\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Set Winning Score:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: winningScore,\n        onChange: e => setWinningScore(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Cor+CZLgQPGMxSjU5rPG6HtMtvY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Dice","Player","GameOptions","jsxDEV","_jsxDEV","App","_s","player1","setPlayer1","name","score","currentScore","isActive","player2","setPlayer2","currentPlayer","setCurrentPlayer","dice1","setDice1","dice2","setDice2","isGameOver","setIsGameOver","winningScore","setWinningScore","checkWinningCondition","player","alert","rollDice","newDice1","Math","floor","random","newDice2","prev","newScore","updatedScore","holdScore","nextScore","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","playerNumber","num1","num2","onRoll","onHold","onClick","type","value","onChange","e","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/benishakov/dice-game/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Dice from './Dice';\nimport Player from './Player';\nimport GameOptions from './GameOptions';\n\nconst App = () => {\n    const [player1, setPlayer1] = useState({ name: 'Player 1', score: 0, currentScore: 0, isActive: true });\n    const [player2, setPlayer2] = useState({ name: 'Player 2', score: 0, currentScore: 0, isActive: false });\n    const [currentPlayer, setCurrentPlayer] = useState(1);\n\n    const [dice1, setDice1] = useState(0); // initial dice value\n    const [dice2, setDice2] = useState(0);\n\n    const [isGameOver, setIsGameOver] = useState(false); // game over state\n    const [winningScore, setWinningScore] = useState(100); // winning score\n    \n    //const activePlayer = currentPlayer === 1 ? player1 : player2;\n    //const setActivePlayer = currentPlayer === 1 ? setPlayer1 : setPlayer2;\n\n    const checkWinningCondition = (player, score) => {\n        if(score >= winningScore) {\n            setIsGameOver(true);\n            alert(`${player.name} wins the game!`);\n            return true;\n        }\n        return false;\n    };\n\n    const rollDice = () => {\n        if(isGameOver) return;\n\n        const newDice1 = Math.floor(Math.random() * 6) + 1;\n        const newDice2 = Math.floor(Math.random() * 6) + 1;\n        setDice1(newDice1);\n        setDice2(newDice2);\n\n        if (newDice1 === 6 && newDice2 === 6) {\n            if( currentPlayer === 1) {\n                setPlayer1(prev => ({ ...prev, currentScore: 0, isActive: false }));\n                setPlayer2(prev => ({ ...prev, isActive: true }));\n            } else {\n                setPlayer2(prev => ({ ...prev, currentScore: 0, isActive: false }));\n                setPlayer1(prev => ({ ...prev, isActive: true }));\n            }\n            setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n        } else {\n            const newScore = newDice1 + newDice2;\n            if(currentPlayer === 1) {\n                const updatedScore = player1.currentScore + newScore;\n                if(checkWinningCondition(player1, player1.score + updatedScore)){\n                    setPlayer1(prev => ({ ...prev, score: prev.score + updatedScore, currentScore: updatedScore, isActive: false}));\n                } else {\n                    setPlayer1(prev => ({ ...prev, score: prev.score + updatedScore, currentScore: updatedScore}));\n                }\n            } else {\n                const updatedScore = player2.currentScore + newScore;\n                if (checkWinningCondition(player2, player2.score + updatedScore)) {\n                    setPlayer2(prev => ({ ...prev, score: prev.score + updatedScore, currentScore: updatedScore, isActive: false }));\n                } else {\n                    setPlayer2(prev => ({ ...prev, currentScore: updatedScore }));\n                }\n            }\n        }\n    };\n\n    const holdScore = () => {\n        if(isGameOver) return;\n\n        if(currentPlayer === 1) {\n            const nextScore = player1.score + player1.currentScore;\n            if (nextScore >= winningScore) {\n                setPlayer1(prev => ({ ...prev, score: nextScore, isActive: false }));\n                setIsGameOver(true);\n                alert(`Player ${player1.name} wins the game!`);\n            } else {\n                setPlayer1(prev => ({ ...prev, score: nextScore, currentScore: 0, isActive:false}));\n                setPlayer2(prev => ({ ...prev, isActive:true }));\n                setCurrentPlayer(2);\n            }\n        } else {\n            const nextScore = player2.score + player2.currentScore;\n            if (nextScore >= winningScore) {\n                setPlayer2(prev => ({ ...prev, score: nextScore, isActive: false }));\n                setIsGameOver(true);\n                alert(`${player2.name} wins the game!`);\n              } else {\n                setPlayer2(prev => ({ ...prev, score: nextScore, currentScore: 0, isActive: false }));\n                setPlayer1(prev => ({ ...prev, isActive: true }));\n                setCurrentPlayer(1);\n              }\n        }\n        \n        \n    };\n\n    const resetGame = () => {\n        setPlayer1({ name: 'Player 1' ,score: 0, currentScore: 0, isActive: true });\n        setPlayer2({ name: 'Player 2' ,score: 0, currentScore: 0, isActive: false });\n        setCurrentPlayer(player1);\n        setDice1(0);\n        setDice2(0);\n        setIsGameOver(false);\n    };\n\n    return (\n        <div className=\"app\">\n            <h1>Dice Game</h1>\n            <div className=\"players\">\n                <Player \n                    playerNumber={1} \n                    name={player1.name} \n                    score={player1.score} \n                    currentScore={player1.currentScore} \n                    isActive={player1.isActive} />\n                <Player \n                    playerNumber={2} \n                    name={player2.name} \n                    score={player2.score} \n                    currentScore={player2.currentScore} \n                    isActive={player2.isActive} />\n            </div>\n\n            <Dice num1={dice1} num2={dice2} />\n            \n            <GameOptions onRoll={rollDice} onHold={holdScore} isGameOver={isGameOver} />\n            \n            <button onClick={resetGame}>Reset Game</button>\n\n            <div className=\"input-score\">\n                <label>Set Winning Score:</label>\n                <input \n                    type=\"number\" \n                    value={winningScore} \n                    onChange={e => setWinningScore(parseInt(e.target.value))} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}