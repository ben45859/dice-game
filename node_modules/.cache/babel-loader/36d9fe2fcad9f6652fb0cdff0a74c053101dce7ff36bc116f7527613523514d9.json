{"ast":null,"code":"export function gameReducer(gameState, action) {\n  switch (action.type) {\n    case \"roll\":\n      return handleRoll(gameState, action.dices);\n    case \"hold\":\n      return handleHold(gameState);\n    case \"newGame\":\n      return handleNewGame(gameState, action.winningScore);\n    case \"reset\":\n      return handleReset(action.winningScore);\n    default:\n      throw new Error(\"Unknown action\");\n  }\n}\nfunction handleRoll(gameState, dices) {\n  const [dice1, dice2] = dices;\n  if (gameState.status !== \"PLAYING\") {\n    return gameState;\n  }\n  if (dice1 == 6 && dice2 == 6) {\n    return {\n      ...gameState,\n      roundScore: 0,\n      lastRoll: [dice1, dice2],\n      doubleSix: true,\n      turn: gameState.turn === \"HUMAN\" ? \"AI\" : \"HUMAN\"\n    };\n  }\n  return {\n    ...gameState,\n    roundScore: gameState.roundScore + dice1 + dice2,\n    lastRoll: [dice1, dice2],\n    doubleSix: false\n  };\n}\nfunction handleHold(gameState) {\n  if (gameState.status !== \"PLAYING\") {\n    return gameState;\n  }\n  const {\n    turn,\n    roundScore,\n    winningScore,\n    playerScore,\n    winCount\n  } = gameState;\n  const newScore = playerScore[turn] + roundScore;\n  const newState = JSON.parse(JSON.stringify(gameState));\n  newState.playerScore[turn] += roundScore;\n  if (newScore >= winningScore) {\n    newState.status = \"OVER\";\n    newState.winCount[turn] += 1;\n    return newState;\n  }\n  newState.turn = nextTurn(turn);\n  newState.roundScore = 0;\n  return newState;\n}\nfunction handleNewGame(gameState, winningScore) {\n  return {\n    ...gameState,\n    status: \"PLAYING\",\n    roundScore: 0,\n    winningScore: winningScore || gameState.winningScore,\n    turn: \"HUMAN\",\n    playerScore: {\n      HUMAN: 0,\n      AI: 0\n    },\n    lastRoll: [0, 0],\n    doubleSix: false\n  };\n}\nfunction handleReset(winningScore) {\n  return {\n    status: \"PLAYING\",\n    roundScore: 0,\n    winningScore: winningScore || 100,\n    turn: \"HUMAN\",\n    playerScore: {\n      HUMAN: 0,\n      AI: 0\n    },\n    winCount: {\n      HUMAN: 0,\n      AI: 0\n    },\n    lastRoll: [0, 0],\n    doubleSix: false\n  };\n}\nfunction nextTurn(turn) {\n  return turn === \"HUMAN\" ? \"AI\" : \"HUMAN\";\n}","map":{"version":3,"names":["gameReducer","gameState","action","type","handleRoll","dices","handleHold","handleNewGame","winningScore","handleReset","Error","dice1","dice2","status","roundScore","lastRoll","doubleSix","turn","playerScore","winCount","newScore","newState","JSON","parse","stringify","nextTurn","HUMAN","AI"],"sources":["/Users/benishakov/dice-game/src/Logic/GameReducer.js"],"sourcesContent":["export function gameReducer(gameState, action) {\n  switch (action.type) {\n    case \"roll\":\n      return handleRoll(gameState, action.dices);\n    case \"hold\":\n      return handleHold(gameState);\n    case \"newGame\":\n      return handleNewGame(gameState, action.winningScore);\n    case \"reset\":\n      return handleReset(action.winningScore);\n    default:\n      throw new Error(\"Unknown action\");\n  }\n}\n\nfunction handleRoll(gameState, dices) {\n  const [dice1, dice2] = dices;\n\n  if (gameState.status !== \"PLAYING\") {\n    return gameState;\n  }\n\n  if (dice1 == 6 && dice2 == 6) {\n    return {\n      ...gameState,\n      roundScore: 0,\n      lastRoll: [dice1, dice2],\n      doubleSix: true,\n      turn: gameState.turn === \"HUMAN\" ? \"AI\" : \"HUMAN\"\n    };\n  }\n\n  return {\n    ...gameState,\n    roundScore: gameState.roundScore + dice1 + dice2,\n    lastRoll: [dice1, dice2],\n    doubleSix: false\n  };\n}\n\nfunction handleHold(gameState) {\n  if (gameState.status !== \"PLAYING\") {\n    return gameState;\n  }\n\n  const { turn, roundScore, winningScore, playerScore, winCount } = gameState;\n  const newScore = playerScore[turn] + roundScore;\n\n  const newState = JSON.parse(JSON.stringify(gameState));\n  newState.playerScore[turn] += roundScore;\n\n  if (newScore >= winningScore) {\n    newState.status = \"OVER\";\n    newState.winCount[turn] += 1;\n    return newState;\n  }\n\n  newState.turn = nextTurn(turn);\n  newState.roundScore = 0;\n\n  return newState;\n}\n\nfunction handleNewGame(gameState, winningScore) {\n    return {\n        ...gameState,\n        status: \"PLAYING\",\n        roundScore: 0,\n        winningScore: winningScore || gameState.winningScore,\n        turn: \"HUMAN\",\n        playerScore: { HUMAN: 0, AI:0 },\n        lastRoll: [0,0],\n        doubleSix: false\n    };\n}\n\nfunction handleReset(winningScore) {\n    return {\n        status: \"PLAYING\",\n        roundScore: 0,\n        winningScore: winningScore || 100,\n        turn: \"HUMAN\",\n        playerScore: { HUMAN: 0, AI: 0 },\n        winCount: { HUMAN: 0, AI: 0},\n        lastRoll: [0, 0],\n        doubleSix: false\n    };\n}\nfunction nextTurn(turn) {\n  return turn === \"HUMAN\" ? \"AI\" : \"HUMAN\";\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}