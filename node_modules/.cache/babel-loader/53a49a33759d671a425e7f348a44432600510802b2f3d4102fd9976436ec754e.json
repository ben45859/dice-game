{"ast":null,"code":"export function gameReducer(gameState, action) {\n  switch (action.type) {\n    case \"roll\":\n      return handleRoll(gameState, action.dices);\n    case \"hold\":\n      return handleHold(gameState);\n    case \"newGame\":\n      return handleNewGame(gameState, action.winningScore);\n    case \"reset\":\n      return handleReset(action.winningScore);\n    default:\n      throw new Error(\"Unknown action\");\n  }\n}\nfunction handleRoll(gameState, dices) {\n  const [dice1, dice2] = dices;\n  if (gameState !== \"PLAYING\") {\n    throw new Error(\"Cannot roll when not playing\");\n  }\n  if (dice1 == 6 && dice2 == 6) {\n    return {\n      ...gameState,\n      turn: nextTurn(gameState.turn),\n      roundScore: 0,\n      lastRoll: [dice1, dice2],\n      doubleSix: true\n    };\n  }\n  return {\n    ...gameState,\n    roundScore: gameState.roundScore + dice1 + dice2,\n    lastRoll: [dice1, dice2],\n    doubleSix: false\n  };\n}\nfunction handleHold(gameState) {\n  if (gameState.status !== \"PLAYING\") {\n    throw new Error(\"Cannot hold when not playing\");\n  }\n  const {\n    turn,\n    roundScore,\n    winningScore,\n    playerScore,\n    winCount\n  } = gameState;\n  const newScore = playerScore[turn] + roundScore;\n  const newState = JSON.parse(JSON.stringify(gameState));\n  newState.playerScore[turn] += roundScore;\n  if (newScore >= winningScore) {\n    newState.status = \"OVER\";\n    newState.winCount[turn] += 1;\n    return newState;\n  }\n  newState.turn = nextTurn(turn);\n  newState.roundScore = 0;\n  return newState;\n}\nfunction handleNewGame(gameState, winningScore) {\n  return {\n    ...gameState,\n    status: \"PLAYING\",\n    roundScore: 0,\n    winningScore: winningScore || gameState.winningScore,\n    turn: \"1\",\n    playerScore: {\n      1: 0,\n      2: 0\n    },\n    lastRoll: [0, 0],\n    doubleSix: false\n  };\n}\nfunction handleReset(winningScore) {\n  return {\n    status: \"PLAYING\",\n    roundScore: 0,\n    winningScore: winningScore || 100,\n    turn: \"1\",\n    playerScore: {\n      1: 0,\n      2: 0\n    },\n    winCount: {\n      1: 0,\n      2: 0\n    },\n    lastRoll: [0, 0],\n    doubleSix: false\n  };\n}\nfunction nextTurn(turn) {\n  return turn === \"1\" ? \"2\" : \"1\";\n}","map":{"version":3,"names":["gameReducer","gameState","action","type","handleRoll","dices","handleHold","handleNewGame","winningScore","handleReset","Error","dice1","dice2","turn","nextTurn","roundScore","lastRoll","doubleSix","status","playerScore","winCount","newScore","newState","JSON","parse","stringify"],"sources":["/Users/benishakov/dice-game/src/GameReducer.js"],"sourcesContent":["export function gameReducer(gameState, action) {\n  switch (action.type) {\n    case \"roll\":\n      return handleRoll(gameState, action.dices);\n    case \"hold\":\n      return handleHold(gameState);\n    case \"newGame\":\n      return handleNewGame(gameState, action.winningScore);\n    case \"reset\":\n      return handleReset(action.winningScore);\n    default:\n      throw new Error(\"Unknown action\");\n  }\n}\n\nfunction handleRoll(gameState, dices) {\n  const [dice1, dice2] = dices;\n\n  if (gameState !== \"PLAYING\") {\n    throw new Error(\"Cannot roll when not playing\");\n  }\n\n  if (dice1 == 6 && dice2 == 6) {\n    return {\n      ...gameState,\n      turn: nextTurn(gameState.turn),\n      roundScore: 0,\n      lastRoll: [dice1, dice2],\n      doubleSix: true\n    };\n  }\n\n  return {\n    ...gameState,\n    roundScore: gameState.roundScore + dice1 + dice2,\n    lastRoll: [dice1, dice2],\n    doubleSix: false\n  };\n}\n\nfunction handleHold(gameState) {\n  if (gameState.status !== \"PLAYING\") {\n    throw new Error(\"Cannot hold when not playing\");\n  }\n  const { turn, roundScore, winningScore, playerScore, winCount } = gameState;\n  const newScore = playerScore[turn] + roundScore;\n\n  const newState = JSON.parse(JSON.stringify(gameState));\n  newState.playerScore[turn] += roundScore;\n\n  if (newScore >= winningScore) {\n    newState.status = \"OVER\";\n    newState.winCount[turn] += 1;\n    return newState;\n  }\n\n  newState.turn = nextTurn(turn);\n  newState.roundScore = 0;\n\n  return newState;\n}\n\nfunction handleNewGame(gameState, winningScore) {\n    return {\n        ...gameState,\n        status: \"PLAYING\",\n        roundScore: 0,\n        winningScore: winningScore || gameState.winningScore,\n        turn: \"1\",\n        playerScore: { 1: 0, 2:0 },\n        lastRoll: [0,0],\n        doubleSix: false\n    };\n}\n\nfunction handleReset(winningScore) {\n    return {\n        status: \"PLAYING\",\n        roundScore: 0,\n        winningScore: winningScore || 100,\n        turn: \"1\",\n        playerScore: { 1: 0, 2: 0 },\n        winCount: { 1: 0, 2: 0},\n        lastRoll: [0, 0],\n        doubleSix: false\n    };\n}\nfunction nextTurn(turn) {\n  return turn === \"1\" ? \"2\" : \"1\";\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}