{"ast":null,"code":"var _jsxFileName = \"/Users/benishakov/dice-game/src/Logic/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect, useState, useCallback } from 'react';\nimport { gameReducer } from './GameReducer';\nimport Dice from '../components/Dice';\nimport GameControls from '../components/GameControls';\nimport PlayerScore from '../components/PlayerScore';\nimport ScoreBoard from '../components/ScoreBoard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  status: \"PLAYING\",\n  roundScore: 0,\n  winningScore: 100,\n  turn: \"HUMAN\",\n  playerScore: {\n    HUMAN: 0,\n    AI: 0\n  },\n  winCount: {\n    HUMAN: 0,\n    AI: 0\n  },\n  lastRoll: [0, 0],\n  doubleSix: false\n};\nexport default function Game() {\n  _s();\n  const [gameState, dispatch] = useReducer(gameReducer, initialState);\n  const [winningScoreInput, setWinningScoreInput] = useState(100);\n  const [audioContext, setAudioContext] = useState(null);\n  const [isRolling, setIsRolling] = useState(false);\n  useEffect(() => {\n    const context = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(context);\n\n    // Load game state from local storage on component mount\n    const savedGameState = localStorage.getItem('gameState');\n    if (savedGameState) {\n      const parsedData = JSON.parse(savedGameState);\n      dispatch({\n        type: 'newGame',\n        payload: parsedData\n      });\n    }\n    return () => {\n      if (context) {\n        context.close();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Save game state to local storage whenever it changes\n    localStorage.setItem('gameState', JSON.stringify(gameState));\n  }, [gameState]);\n  useEffect(() => {\n    if (gameState.turn === \"AI\" && gameState.status === \"PLAYING\") {\n      setTimeout(playAITurn, 1000);\n    }\n  }, [gameState.turn, gameState.status]);\n  const rollDice = useCallback(() => {\n    if (isRolling) return;\n    const dice1 = Math.floor(Math.random() * 6) + 1;\n    const dice2 = Math.floor(Math.random() * 6) + 1;\n    setIsRolling(true);\n    setTimeout(() => {\n      dispatch({\n        type: 'roll',\n        dices: [dice1, dice2]\n      });\n      playSound(audioContext, 'roll');\n      setIsRolling(false);\n      if (dice1 === 6 && dice2 === 6) {\n        setTimeout(() => {\n          alert('Double Six! You lose your round score!');\n        }, 100);\n      }\n    }, 1000);\n  }, [audioContext, isRolling]);\n  const hold = () => {\n    dispatch({\n      type: 'hold'\n    });\n    playSound(audioContext, 'hold');\n  };\n  const startNewGame = () => {\n    dispatch({\n      type: 'newGame',\n      winningScore: winningScoreInput\n    });\n    playSound(audioContext, 'newGame');\n  };\n  const resetGame = () => {\n    dispatch({\n      type: 'reset',\n      winningScore: winningScoreInput\n    });\n    playSound(audioContext, 'reset');\n  };\n  const playAITurn = useCallback(() => {\n    rollDice();\n    setTimeout(() => {\n      if (gameState.roundScore >= 20 || Math.random() < 0.3) {\n        hold();\n      }\n    }, 1000);\n  }, [gameState.roundScore, gameState.status]);\n  const playSound = (context, type) => {\n    if (!context) return;\n    const oscillator = context.createOscillator();\n    const gainNode = context.createGain();\n    oscillator.connect(gainNode);\n    gainNode.connect(context.destination);\n    switch (type) {\n      case 'roll':\n        oscillator.type = 'triangle';\n        oscillator.frequency.setValueAtTime(440, context.currentTime);\n        break;\n      case 'hold':\n        oscillator.type = 'sine';\n        oscillator.frequency.setValueAtTime(660, context.currentTime);\n        break;\n      case 'newGame':\n      case 'reset':\n        oscillator.type = 'square';\n        oscillator.frequency.setValueAtTime(523.25, context.currentTime);\n        break;\n      default:\n        return;\n    }\n    gainNode.gain.setValueAtTime(1, context.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.001, context.currentTime + 1);\n    oscillator.start(context.currentTime);\n    oscillator.stop(context.currentTime + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dice Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      playerScore: gameState.playerScore,\n      winCount: gameState.winCount,\n      currentTurn: gameState.turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Round Score: \", gameState.roundScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Turn: \", gameState.turn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game Status: \", gameState.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dice, {\n      dice1: gameState.lastRoll[0],\n      dice2: gameState.lastRoll[1],\n      isRolling: isRolling\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), gameState.doubleSix && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"double-six-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Double Six! You lose your turn!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(GameControls, {\n      onRoll: rollDice,\n      onHold: hold,\n      disabled: gameState.status !== \"PLAYING\" || gameState.turn !== \"HUMAN\" || isRolling\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-game\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: winningScoreInput,\n        onChange: e => setWinningScoreInput(parseInt(e.target.value, 10)),\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayerScore, {\n      player: \"HUMAN\",\n      score: gameState.playerScore.HUMAN,\n      isCurrentTurn: gameState.turn === \"HUMAN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayerScore, {\n      player: \"AI\",\n      score: gameState.playerScore.AI,\n      isCurrentTurn: gameState.turn === \"AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"wCnQteILuvIkBOEXDs7AL+rbYYQ=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useReducer","useEffect","useState","useCallback","gameReducer","Dice","GameControls","PlayerScore","ScoreBoard","jsxDEV","_jsxDEV","initialState","status","roundScore","winningScore","turn","playerScore","HUMAN","AI","winCount","lastRoll","doubleSix","Game","_s","gameState","dispatch","winningScoreInput","setWinningScoreInput","audioContext","setAudioContext","isRolling","setIsRolling","context","window","AudioContext","webkitAudioContext","savedGameState","localStorage","getItem","parsedData","JSON","parse","type","payload","close","setItem","stringify","setTimeout","playAITurn","rollDice","dice1","Math","floor","random","dice2","dices","playSound","alert","hold","startNewGame","resetGame","oscillator","createOscillator","gainNode","createGain","connect","destination","frequency","setValueAtTime","currentTime","gain","exponentialRampToValueAtTime","start","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentTurn","onRoll","onHold","disabled","value","onChange","e","parseInt","target","min","onClick","player","score","isCurrentTurn","_c","$RefreshReg$"],"sources":["/Users/benishakov/dice-game/src/Logic/Game.jsx"],"sourcesContent":["import React, { useReducer, useEffect, useState, useCallback } from 'react';\nimport { gameReducer } from './GameReducer';\nimport Dice from '../components/Dice';\nimport GameControls from '../components/GameControls';\nimport PlayerScore from '../components/PlayerScore';\nimport ScoreBoard from '../components/ScoreBoard';\n\nconst initialState = {\n    status: \"PLAYING\",\n    roundScore: 0,\n    winningScore: 100,\n    turn: \"HUMAN\",\n    playerScore: { HUMAN: 0, AI: 0 },\n    winCount: { HUMAN:0, AI: 0},\n    lastRoll: [0, 0],\n    doubleSix: false\n};\n\nexport default function Game() {\n    const [gameState, dispatch] = useReducer(gameReducer, initialState);\n    const [winningScoreInput, setWinningScoreInput] = useState(100);\n    const [audioContext, setAudioContext] = useState(null);\n    const [isRolling, setIsRolling] = useState(false);\n\n    useEffect(() => {\n        const context = new (window.AudioContext || window.webkitAudioContext)();\n        setAudioContext(context);\n\n        // Load game state from local storage on component mount\n        const savedGameState = localStorage.getItem('gameState');\n        if(savedGameState) {\n            const parsedData = JSON.parse(savedGameState);\n            dispatch({ \n                type: 'newGame', \n                payload: parsedData\n             });\n        }\n\n        return () => {\n            if(context) {\n                context.close();\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        // Save game state to local storage whenever it changes\n        localStorage.setItem('gameState', JSON.stringify(gameState));\n    }, [gameState]);\n\n    useEffect(() => {\n        if(gameState.turn === \"AI\" && gameState.status === \"PLAYING\") {\n            setTimeout(playAITurn, 1000);\n        }\n    }, [gameState.turn, gameState.status]);\n\n    const rollDice = useCallback(() => {\n        if(isRolling) return;\n\n        const dice1 = Math.floor(Math.random() * 6) + 1;\n        const dice2 = Math.floor(Math.random() * 6) + 1;\n        setIsRolling(true);\n        setTimeout(() => {\n            dispatch({ type: 'roll', dices: [dice1, dice2] });\n            playSound(audioContext, 'roll');\n            setIsRolling(false);\n        if(dice1 === 6 && dice2 === 6) {\n            setTimeout(() => {\n                alert('Double Six! You lose your round score!');\n            }, 100);\n        }\n        }, 1000);\n    }, [audioContext, isRolling]);\n\n    const hold = () => {\n        dispatch({ type: 'hold' });\n        playSound(audioContext, 'hold');\n    };\n\n    const startNewGame = () => {\n        dispatch({ type: 'newGame', winningScore: winningScoreInput });\n        playSound(audioContext, 'newGame');\n    };\n\n    const resetGame = () => {\n        dispatch({ type: 'reset', winningScore: winningScoreInput });\n        playSound(audioContext, 'reset');\n    };\n\n    const playAITurn = useCallback(() => {\n        rollDice();\n        setTimeout(() => {\n            if(gameState.roundScore >= 20 || Math.random() < 0.3) {\n                hold();\n            }\n        }, 1000);\n    }, [gameState.roundScore, gameState.status]);\n\n    const playSound = (context, type) => {\n        if(!context) return;\n        const oscillator = context.createOscillator();\n        const gainNode = context.createGain();\n    \n        oscillator.connect(gainNode);\n        gainNode.connect(context.destination);\n    \n        switch(type) {\n            case 'roll':\n                oscillator.type = 'triangle';\n                oscillator.frequency.setValueAtTime(440, context.currentTime);\n                break;\n            case 'hold':\n                oscillator.type = 'sine';\n                oscillator.frequency.setValueAtTime(660, context.currentTime);\n                break;\n            case 'newGame':\n            case 'reset':\n                oscillator.type = 'square';\n                oscillator.frequency.setValueAtTime(523.25, context.currentTime);\n                break;\n            default:\n                return;\n        }\n    \n        gainNode.gain.setValueAtTime(1, context.currentTime);\n        gainNode.gain.exponentialRampToValueAtTime(0.001, context.currentTime + 1);\n        oscillator.start(context.currentTime);\n        oscillator.stop(context.currentTime + 1);\n    };\n    \n\n    return (\n        <div className=\"game-container\">\n            <h1>Dice Game</h1>\n            <ScoreBoard\n                playerScore={gameState.playerScore}\n                winCount={gameState.winCount}\n                currentTurn={gameState.turn}\n            />\n            <div className=\"game-info\">\n                <p>Current Round Score: {gameState.roundScore}</p>\n                <p>Current Turn: {gameState.turn}</p>\n                <p>Game Status: {gameState.status}</p>\n            </div>\n            <Dice dice1={gameState.lastRoll[0]} dice2={gameState.lastRoll[1]} isRolling={isRolling} />\n            {gameState.doubleSix && (\n                <div className=\"double-six-message\">\n                    \n                    <p>Double Six! You lose your turn!</p>\n                </div>\n            )}\n            <GameControls\n                onRoll={rollDice}\n                onHold={hold}\n                disabled={gameState.status !== \"PLAYING\" || gameState.turn !== \"HUMAN\" || isRolling}\n            />\n            <div className=\"new-game\">\n                <input\n                    type=\"number\"\n                    value={winningScoreInput}\n                    onChange={(e) => setWinningScoreInput(parseInt(e.target.value, 10))}\n                    min=\"1\"\n                />\n                <button onClick={startNewGame}>New Game</button>\n                <button onClick={resetGame}>Reset Game</button>\n            </div>\n            <PlayerScore\n                player=\"HUMAN\"\n                score={gameState.playerScore.HUMAN}\n                isCurrentTurn={gameState.turn === \"HUMAN\"}\n            />\n            <PlayerScore\n                player=\"AI\"\n                score={gameState.playerScore.AI}\n                isCurrentTurn={gameState.turn === \"AI\"}\n            />\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}