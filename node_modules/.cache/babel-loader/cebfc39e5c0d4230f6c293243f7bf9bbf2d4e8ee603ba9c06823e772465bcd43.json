{"ast":null,"code":"// Player might have multiple actions\n//   1. Roll the dice\n//   2. Hold the score\nimport { DiceRoller } from \"../DiceRoller\";\nexport const GAME_STATUS = {\n  PLAYING: \"PLAYING\",\n  WON: \"WON\"\n};\nexport class Game {\n  constructor(winningScore, diceRoller = new DiceRoller()) {\n    this._diceRoller = diceRoller;\n    this._winningScore = winningScore;\n    this._players = {\n      1: {\n        score: 0,\n        winCount: 0\n      },\n      2: {\n        score: 0,\n        winCount: 0\n      }\n    };\n    this._reset();\n  }\n  _reset() {\n    this._players[\"1\"].score = 0;\n    this._players[\"2\"].score = 0;\n    this._currentPlayer = \"1\";\n    this._roundScore = 0;\n    this._status = GAME_STATUS.PLAYING;\n  }\n\n  /**\n   * @returns {number} - 1 or 2\n   */\n  get turn() {\n    return this._currentPlayer;\n  }\n  get status() {\n    return this._status;\n  }\n  get scores() {\n    return {\n      1: this._players[\"1\"].score,\n      2: this._players[\"2\"].score\n    };\n  }\n  get winCount() {\n    return {\n      1: this._players[\"1\"].winCount,\n      2: this._players[\"2\"].winCount\n    };\n  }\n  get roundScore() {\n    return this._roundScore;\n  }\n  _nextTurn() {\n    this._currentPlayer = this._currentPlayer === \"1\" ? \"2\" : \"1\";\n  }\n  hold() {\n    const current = this._players[this._currentPlayer];\n    current.score += this._roundScore;\n    this._roundScore = 0;\n    if (current.score >= this._winningScore) {\n      this._declareWin();\n      return this.status;\n    }\n    this._nextTurn();\n    return this.status;\n  }\n  roll() {\n    if (this._status !== GAME_STATUS.PLAYING) {\n      this._reset();\n    }\n    const [dice1, dice2] = this._diceRoller.rollTwoDice();\n    if (dice1 === 6 && dice2 === 6) {\n      this._roundScore = 0;\n      this._nextTurn();\n      return [dice1, dice2];\n    }\n    this._roundScore += dice1 + dice2;\n    return [dice1, dice2];\n  }\n  _declareWin() {\n    this._players[this._currentPlayer].winCount++;\n    this._status = GAME_STATUS.WON;\n  }\n}","map":{"version":3,"names":["DiceRoller","GAME_STATUS","PLAYING","WON","Game","constructor","winningScore","diceRoller","_diceRoller","_winningScore","_players","score","winCount","_reset","_currentPlayer","_roundScore","_status","turn","status","scores","roundScore","_nextTurn","hold","current","_declareWin","roll","dice1","dice2","rollTwoDice"],"sources":["/Users/benishakov/dice-game/src/old/Game.js"],"sourcesContent":["// Player might have multiple actions\n//   1. Roll the dice\n//   2. Hold the score\nimport { DiceRoller } from \"../DiceRoller\";\n\nexport const GAME_STATUS = {\n  PLAYING: \"PLAYING\",\n  WON: \"WON\",\n};\n\nexport class Game {\n  constructor(winningScore, diceRoller = new DiceRoller()) {\n    this._diceRoller = diceRoller;\n    this._winningScore = winningScore;\n    this._players = {\n      1: {\n        score: 0,\n        winCount: 0,\n      },\n      2: {\n        score: 0,\n        winCount: 0,\n      },\n    };\n    this._reset();\n  }\n\n  _reset() {\n    this._players[\"1\"].score = 0;\n    this._players[\"2\"].score = 0;\n    this._currentPlayer = \"1\";\n    this._roundScore = 0;\n    this._status = GAME_STATUS.PLAYING;\n  }\n\n  /**\n   * @returns {number} - 1 or 2\n   */\n  get turn() {\n    return this._currentPlayer;\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  get scores() {\n    return {\n      1: this._players[\"1\"].score,\n      2: this._players[\"2\"].score,\n    };\n  }\n\n  get winCount() {\n    return {\n      1: this._players[\"1\"].winCount,\n      2: this._players[\"2\"].winCount,\n    };\n  }\n  get roundScore() {\n    return this._roundScore;\n  }\n\n  _nextTurn() {\n    this._currentPlayer = this._currentPlayer === \"1\" ? \"2\" : \"1\";\n  }\n\n  hold() {\n    const current = this._players[this._currentPlayer];\n    current.score += this._roundScore;\n    this._roundScore = 0;\n\n    if (current.score >= this._winningScore) {\n      this._declareWin();\n      return this.status;\n    }\n\n    this._nextTurn();\n    return this.status;\n  }\n\n  roll() {\n    if (this._status !== GAME_STATUS.PLAYING) {\n      this._reset();\n    }\n    const [dice1, dice2] = this._diceRoller.rollTwoDice();\n\n    if (dice1 === 6 && dice2 === 6) {\n      this._roundScore = 0;\n      this._nextTurn();\n      return [dice1, dice2];\n    }\n    this._roundScore += dice1 + dice2;\n    return [dice1, dice2];\n  }\n\n  _declareWin() {\n    this._players[this._currentPlayer].winCount++;\n    this._status = GAME_STATUS.WON;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}