{"ast":null,"code":"var _jsxFileName = \"/Users/benishakov/dice-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Dice from \"./components/Dice\";\nimport Player from \"./components/Player\";\nimport GameOptions from \"./old/GameOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [player1, setPlayer1] = useState({\n    name: \"Player 1\",\n    score: 0,\n    currentScore: 0,\n    isActive: true\n  });\n  const [player2, setPlayer2] = useState({\n    name: \"Player 2\",\n    score: 0,\n    currentScore: 0,\n    isActive: false\n  });\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n  const [dice1, setDice1] = useState(0); // initial dice value\n  const [dice2, setDice2] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false); // game over state\n  const [winningScore, setWinningScore] = useState(100); // winning score\n\n  //const activePlayer = currentPlayer === 1 ? player1 : player2;\n  //const setActivePlayer = currentPlayer === 1 ? setPlayer1 : setPlayer2;\n\n  const checkWinningCondition = (player, score) => {\n    if (score >= winningScore) {\n      setIsGameOver(true);\n      alert(`${player.playerNumber} wins the game!`);\n      return true;\n    }\n    return false;\n  };\n  const rollDice = () => {\n    if (isGameOver) return;\n    const newDice1 = Math.floor(Math.random() * 6) + 1;\n    const newDice2 = Math.floor(Math.random() * 6) + 1;\n    setDice1(newDice1);\n    setDice2(newDice2);\n    if (newDice1 === 6 && newDice2 === 6) {\n      if (currentPlayer === 1) {\n        setPlayer1(prev => ({\n          ...prev,\n          currentScore: 0,\n          isActive: false\n        }));\n        setPlayer2(prev => ({\n          ...prev,\n          isActive: true\n        }));\n      } else {\n        setPlayer2(prev => ({\n          ...prev,\n          currentScore: 0,\n          isActive: false\n        }));\n        setPlayer1(prev => ({\n          ...prev,\n          isActive: true\n        }));\n      }\n      setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n    } else {\n      const newScore = newDice1 + newDice2;\n      if (currentPlayer === 1) {\n        const updatedScore = player1.currentScore + newScore;\n        if (checkWinningCondition(player1, player1.score + updatedScore)) {\n          setPlayer1(prev => ({\n            ...prev,\n            score: prev.score + updatedScore,\n            currentScore: updatedScore,\n            isActive: false\n          }));\n        } else {\n          setPlayer1(prev => ({\n            ...prev,\n            currentScore: updatedScore\n          }));\n        }\n      } else {\n        const updatedScore = player2.currentScore + newScore;\n        if (checkWinningCondition(player2, player2.score + updatedScore)) {\n          setPlayer2(prev => ({\n            ...prev,\n            score: prev.score + updatedScore,\n            currentScore: updatedScore,\n            isActive: false\n          }));\n        } else {\n          setPlayer2(prev => ({\n            ...prev,\n            currentScore: updatedScore\n          }));\n        }\n      }\n    }\n  };\n  const holdScore = () => {\n    if (isGameOver) return;\n    if (currentPlayer === 1) {\n      const nextScore = player1.score + player1.currentScore;\n      if (checkWinningCondition(player1, nextScore)) {\n        setPlayer1(prev => ({\n          ...prev,\n          score: nextScore,\n          isActive: false\n        }));\n      } else {\n        setPlayer1(prev => ({\n          ...prev,\n          score: nextScore,\n          currentScore: 0,\n          isActive: false\n        }));\n        setPlayer2(prev => ({\n          ...prev,\n          isActive: true\n        }));\n        setCurrentPlayer(2);\n      }\n    } else {\n      const nextScore = player2.score + player2.currentScore;\n      if (checkWinningCondition(player2, nextScore)) {\n        setPlayer2(prev => ({\n          ...prev,\n          score: nextScore,\n          isActive: false\n        }));\n      } else {\n        setPlayer2(prev => ({\n          ...prev,\n          score: nextScore,\n          currentScore: 0,\n          isActive: false\n        }));\n        setPlayer1(prev => ({\n          ...prev,\n          isActive: true\n        }));\n        setCurrentPlayer(1);\n      }\n    }\n  };\n  const resetGame = () => {\n    setPlayer1({\n      name: \"Player 1\",\n      score: 0,\n      currentScore: 0,\n      isActive: true\n    });\n    setPlayer2({\n      name: \"Player 2\",\n      score: 0,\n      currentScore: 0,\n      isActive: false\n    });\n    setCurrentPlayer(1);\n    setDice1(0);\n    setDice2(0);\n    setIsGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dice Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players\",\n      children: [/*#__PURE__*/_jsxDEV(Player, {\n        playerNumber: 1,\n        name: player1.name,\n        score: player1.score,\n        currentScore: player1.currentScore,\n        isActive: player1.isActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        playerNumber: 2,\n        name: player2.name,\n        score: player2.score,\n        currentScore: player2.currentScore,\n        isActive: player2.isActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dice, {\n      value: dice1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dice, {\n      value: dice2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOptions, {\n      onRoll: rollDice,\n      onHold: holdScore,\n      isGameOver: isGameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-score\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Set Winning Score:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: winningScore,\n        onChange: e => setWinningScore(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DnBIzJLoFqwozJPa21bedi1SM0Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Dice","Player","GameOptions","jsxDEV","_jsxDEV","App","_s","player1","setPlayer1","name","score","currentScore","isActive","player2","setPlayer2","currentPlayer","setCurrentPlayer","dice1","setDice1","dice2","setDice2","isGameOver","setIsGameOver","winningScore","setWinningScore","checkWinningCondition","player","alert","playerNumber","rollDice","newDice1","Math","floor","random","newDice2","prev","newScore","updatedScore","holdScore","nextScore","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onRoll","onHold","onClick","type","onChange","e","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/benishakov/dice-game/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Dice from \"./components/Dice\";\nimport Player from \"./components/Player\";\nimport GameOptions from \"./old/GameOptions\";\n\nconst App = () => {\n  const [player1, setPlayer1] = useState({\n    name: \"Player 1\",\n    score: 0,\n    currentScore: 0,\n    isActive: true,\n  });\n  const [player2, setPlayer2] = useState({\n    name: \"Player 2\",\n    score: 0,\n    currentScore: 0,\n    isActive: false,\n  });\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n\n  const [dice1, setDice1] = useState(0); // initial dice value\n  const [dice2, setDice2] = useState(0);\n\n  const [isGameOver, setIsGameOver] = useState(false); // game over state\n  const [winningScore, setWinningScore] = useState(100); // winning score\n\n  //const activePlayer = currentPlayer === 1 ? player1 : player2;\n  //const setActivePlayer = currentPlayer === 1 ? setPlayer1 : setPlayer2;\n\n  const checkWinningCondition = (player, score) => {\n    if (score >= winningScore) {\n      setIsGameOver(true);\n      alert(`${player.playerNumber} wins the game!`);\n      return true;\n    }\n    return false;\n  };\n\n  const rollDice = () => {\n    if (isGameOver) return;\n\n    const newDice1 = Math.floor(Math.random() * 6) + 1;\n    const newDice2 = Math.floor(Math.random() * 6) + 1;\n    setDice1(newDice1);\n    setDice2(newDice2);\n\n    if (newDice1 === 6 && newDice2 === 6) {\n      if (currentPlayer === 1) {\n        setPlayer1((prev) => ({ ...prev, currentScore: 0, isActive: false }));\n        setPlayer2((prev) => ({ ...prev, isActive: true }));\n      } else {\n        setPlayer2((prev) => ({ ...prev, currentScore: 0, isActive: false }));\n        setPlayer1((prev) => ({ ...prev, isActive: true }));\n      }\n      setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n    } else {\n      const newScore = newDice1 + newDice2;\n      if (currentPlayer === 1) {\n        const updatedScore = player1.currentScore + newScore;\n        if (checkWinningCondition(player1, player1.score + updatedScore)) {\n          setPlayer1((prev) => ({\n            ...prev,\n            score: prev.score + updatedScore,\n            currentScore: updatedScore,\n            isActive: false,\n          }));\n        } else {\n          setPlayer1((prev) => ({ ...prev, currentScore: updatedScore }));\n        }\n      } else {\n        const updatedScore = player2.currentScore + newScore;\n        if (checkWinningCondition(player2, player2.score + updatedScore)) {\n          setPlayer2((prev) => ({\n            ...prev,\n            score: prev.score + updatedScore,\n            currentScore: updatedScore,\n            isActive: false,\n          }));\n        } else {\n          setPlayer2((prev) => ({ ...prev, currentScore: updatedScore }));\n        }\n      }\n    }\n  };\n\n  const holdScore = () => {\n    if (isGameOver) return;\n\n    if (currentPlayer === 1) {\n      const nextScore = player1.score + player1.currentScore;\n      if (checkWinningCondition(player1, nextScore)) {\n        setPlayer1((prev) => ({ ...prev, score: nextScore, isActive: false }));\n      } else {\n        setPlayer1((prev) => ({\n          ...prev,\n          score: nextScore,\n          currentScore: 0,\n          isActive: false,\n        }));\n        setPlayer2((prev) => ({ ...prev, isActive: true }));\n        setCurrentPlayer(2);\n      }\n    } else {\n      const nextScore = player2.score + player2.currentScore;\n      if (checkWinningCondition(player2, nextScore)) {\n        setPlayer2((prev) => ({ ...prev, score: nextScore, isActive: false }));\n      } else {\n        setPlayer2((prev) => ({\n          ...prev,\n          score: nextScore,\n          currentScore: 0,\n          isActive: false,\n        }));\n        setPlayer1((prev) => ({ ...prev, isActive: true }));\n        setCurrentPlayer(1);\n      }\n    }\n  };\n\n  const resetGame = () => {\n    setPlayer1({ name: \"Player 1\", score: 0, currentScore: 0, isActive: true });\n    setPlayer2({\n      name: \"Player 2\",\n      score: 0,\n      currentScore: 0,\n      isActive: false,\n    });\n    setCurrentPlayer(1);\n    setDice1(0);\n    setDice2(0);\n    setIsGameOver(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Dice Game</h1>\n      <div className=\"players\">\n        <Player\n          playerNumber={1}\n          name={player1.name}\n          score={player1.score}\n          currentScore={player1.currentScore}\n          isActive={player1.isActive}\n        />\n        <Player\n          playerNumber={2}\n          name={player2.name}\n          score={player2.score}\n          currentScore={player2.currentScore}\n          isActive={player2.isActive}\n        />\n      </div>\n\n      <Dice value={dice1} />\n      <Dice value={dice2} />\n\n      <GameOptions\n        onRoll={rollDice}\n        onHold={holdScore}\n        isGameOver={isGameOver}\n      />\n\n      <button onClick={resetGame}>Reset Game</button>\n\n      <div className=\"input-score\">\n        <label>Set Winning Score:</label>\n        <input\n          type=\"number\"\n          value={winningScore}\n          onChange={(e) => setWinningScore(parseInt(e.target.value))}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}